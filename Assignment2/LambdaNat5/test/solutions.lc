/*
--let rec member = \elem. \list. if elem = EHd(list) then 1 else member elem ETl(list)
--in
--member 1 1:3:1:#
--let rec remove = \elem. \list. if elem = EHd list
--head of list we will remove
member (elem) (tl(list))
*/
let rec member = \elem. \list.
    if (hd list) = elem then 1 else
        if (tl list) = # then 0 else
            member elem (tl list)
in
member 3 2:3:1:#

/*
let rec member = \elem. \list.
    if EHd(list) = ETl(list) then 0 else
        if EHd(list) = elem then 1 else
            member elem ETl(list)
in
member 1 2:3:1:#

let rec sum = \list.
    if list = # then 0 else
        EPlus (EHd (list))(sum (ETl (list)))
in
sum 1:2:3:4:#


let rec prod = \list.
    if list = ENil then 0 else
        ETimes (EHd (list))(prod (ETl (list)))
in
prod 1:2:3:#
let plus_two = \int.
    EPlus (2) (int)
in
plus_two 5
*/
